generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model SuperAdmin {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(60)
  email      String       @unique
  phone      Float        @db.Double
  password   String       @db.VarChar(45)
  address    String       @db.VarChar(45)
  Store      Store[]
  StoreAdmin StoreAdmin[]
}

model Store {
  id          Int          @id @default(autoincrement())
  store_name  String       @db.VarChar(50)
  description String       @db.VarChar(100)
  location    String       @db.VarChar(45)
  latitude    Float
  longitude   Float
  isMainStore Boolean   @default(false)
  SuperAdmin  SuperAdmin   @relation(fields: [superAdminId], references: [id])
  superAdminId Int
  Products    Products[]
  Order       Order[]
  Payment     Payment[]
  StoreAdmin StoreAdmin[]
}

model StoreAdmin {
  id           Int        @id @default(autoincrement())
  name         String     @db.VarChar(50)
  email        String     @unique
  phone        Float      @db.Double
  password     String     @db.VarChar(45)
  address      String     @db.VarChar(45)
  Store        Store      @relation(fields: [storeId], references: [id])
  storeId      Int
  SuperAdmin   SuperAdmin @relation(fields: [superAdminId], references: [id])
  superAdminId Int
}

model Products {
  id       Int     @id @default(autoincrement())
  name     String  @db.VarChar(50)
  category String  @db.VarChar(45)
  price    Decimal @db.Decimal(12, 2)
  stock    Int
  Store    Store   @relation(fields: [storeId], references: [id])
  storeId  Int
  Order    Order[]
}

model Order {
  id        Int       @id @default(autoincrement())
  date      DateTime  @db.Date
  status    String    @db.VarChar(45)
  Store     Store     @relation(fields: [storeId], references: [id])
  storeId   Int
  User      User      @relation(fields: [userId], references: [id])
  userId    Int
  Products  Products  @relation(fields: [productId], references: [id])
  productId Int
  Payment   Payment[]
}

model Payment {
  id           Int      @id @default(autoincrement())
  total_amount Decimal  @db.Decimal(12, 2)
  method       String   @db.VarChar(45)
  date         DateTime @db.Date
  status       String   @db.VarChar(45)
  Order        Order    @relation(fields: [orderId], references: [id])
  orderId      Int
  Store        Store    @relation(fields: [storeId], references: [id])
  storeId      Int
}

model User {
  id       Int     @id @default(autoincrement())
  name     String?  @db.VarChar(50)
  address  String?  @db.VarChar(60)
  phone    Float?   @db.Double
  email    String  @unique @db.VarChar(50)
  password String  @db.VarChar(45)
  role     Role?    @default(USER)
  Order    Order[]
  Addresses Address[]
}

model Address {
  id          Int      @id @default(autoincrement())
  address     String   @db.VarChar(60)
  isPrimary   Boolean  @default(false)
  userId      Int
  cityId      String      @db.VarChar(45)
  cityName    String   @db.VarChar(100)
  province    String   @db.VarChar(100)
  postalCode  String   @db.VarChar(10)
  User        User     @relation(fields: [userId], references: [id])
}

enum Role {
  SUPERADMIN
  STOREADMIN
  USER
}
